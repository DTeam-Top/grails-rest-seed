buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion - ".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:1.2.9"
        classpath 'org.grails.plugins:database-migration:3.0.4'
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.0.0"
        classpath "com.epages:restdocs-api-spec-gradle-plugin:${restDocsApiSpecVersion}"
        // 支持gradle 4.10最高的插件版本为1.6.9，高于这个版本的只支持gradle 5.0+
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.9"
    }
}

version "0.1"
group "backend"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.plugins.views-json"
apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'com.epages.restdocs-api-spec'
apply plugin: 'codenarc'
apply plugin: 'pmd'
apply plugin: "com.github.spotbugs"

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    dependencies {
        dependency "org.springframework.restdocs:spring-restdocs-core:$restDocsVersion"
        dependency "org.springframework.restdocs:spring-restdocs-restassured:$restDocsVersion"
    }
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"

    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile "org.grails.plugins:spring-security-rest:2.0.0.RC1"
    compile "org.grails.plugins:spring-security-core:3.2.3"
    compile "org.grails.plugins:grails-java8"
    compile 'org.grails.plugins:postgresql-extensions:6.1.0'
    compile "org.grails.plugins:database-migration:3.0.4"
    compile "com.aliyun.oss:aliyun-sdk-oss:3.3.0"

    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"

    runtime "org.postgresql:postgresql:42.2.5"
    runtime("com.zaxxer:HikariCP:3.3.1") {
        exclude group: "org.slf4j"
    }

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-datastore-rest-client"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "com.epages:restdocs-api-spec-restassured:${restDocsApiSpecVersion}"

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.9.0'
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

gitProperties {
    // Limit git.properties content
    keys = ['git.branch', 'git.build.time', 'git.commit.id'
            , 'git.commit.id.abbrev', 'git.commit.id.describe'
            , 'git.commit.message.full', 'git.commit.message.short'
            , 'git.commit.time', 'git.tags']
}

openapi3 {
    server = System.getenv('OPENAPI_SERVER') ?: 'http://localhost:8080'
    title = 'Grails-rest-seed API'
    description = 'Grails-rest-seed API文档'
    tagDescriptionsPropertiesFile = 'src/test/resources/tags.yaml'
    version = '1.0'
    format = 'yaml'
}

codenarc {
    toolVersion = '1.3'
    configFile = file('config/codenarc/rules.groovy')
}

codenarcMain {
    excludes = ['**/UrlMappings.groovy']
}
codenarcTest.enabled = false
codenarcIntegrationTest.enabled = false

pmd {
    toolVersion = '6.14.0'
    ruleSetFiles = files('config/pmd/rules.xml')
    ruleSets = []
}
pmdTest.enabled = false
pmdIntegrationTest.enabled = false

spotbugs {
    toolVersion = '3.1.12'
    effort = "max"
    excludeFilter = file('config/spotbugs/spotbugs-exclude.xml')
}
spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        html {
            enabled = true
        }
        xml {
            enabled = false
        }
    }
}
